<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>br.com.rogerio</groupId>
  <artifactId>teste</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>ControleEstagio</name>
  <url>http://example.com</url>
  
  <properties>
    <maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>
    <maven.compiler.fork>true</maven.compiler.fork>
  </properties>
  <dependencies>
	<dependency>
		<groupId>antlr</groupId>
		<artifactId>antlr</artifactId>
		<version>2.7.7</version>
	</dependency>
	<dependency>
		<groupId>ant-junit4</groupId>
		<artifactId>ant-junit4</artifactId>
		<version>ant-junit4</version>
	</dependency>	
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.3.1</version>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.4</version>
	</dependency>
	<dependency>
		<groupId>dom4j</groupId>
		<artifactId>dom4j</artifactId>
		<version>1.6.1</version>
	</dependency>
	<dependency>
		<groupId>hibernate-commons-annotations</groupId>
		<artifactId>hibernate-commons-annotations</artifactId>
		<version>4.0.4.Final</version>
	</dependency>
	<dependency>
		<groupId>hibernate-core</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>4.3.0.Final</version>
	</dependency>	
	<dependency>
		<groupId>hibernate-entitymanager</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>4.3.0.Final</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate.javax.persistence</groupId>
		<artifactId>hibernate-jpa-2.0-api</artifactId>
		<version>1.0.0.Final</version>
	</dependency>
	<dependency>
		<groupId>jasperreports</groupId>
		<artifactId>jasperreports</artifactId>
		<version>5.6.1</version>
	</dependency>
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.17</version>
	</dependency>	
	<dependency>
		<groupId>mysql-connector-java</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.12</version>
	</dependency>	
	<dependency>
		<groupId>org.javassist</groupId>
		<artifactId>javassist</artifactId>
		<version>3.18.1-GA</version>
	</dependency>
	<dependency>
		<groupId>org.jboss</groupId>
		<artifactId>jandex</artifactId>
		<version>1.1.0.Final</version>
	</dependency>
	<dependency>
		<groupId>org.jboss.logging</groupId>
		<artifactId>jboss-logging</artifactId>
		<version>3.1.3.GA</version>
	</dependency>
	<dependency>
		<groupId>org.jboss.logging</groupId>
		<artifactId>jboss-logging-annotations</artifactId>
		<version>1.2.0.Beta1</version>
	</dependency>
	<dependency>
		<groupId>org.jboss.spec.javax.transaction</groupId>
		<artifactId>jboss-transaction-api_1.2_spec</artifactId>
		<version>1.0.0.Final</version>
	</dependency>
	<dependency>
		<groupId>servlet-api</groupId>
		<artifactId>servlet-api</artifactId>
		<version>servlet-api</version>
	</dependency>	
	<dependency>
		<groupId>hamcrest-core</groupId>
		<artifactId>hamcrest-core</artifactId>
		<version>1.3</version>
	</dependency>
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.11</version>
	</dependency>	
  </dependencies>

  <build>
	<finalName>SCERMES</finalName>
	<!-- Precisei configurar o plugin de configuração para usar uma versão espcífica do jdk para compilação
	     pois não não estava conseguindo compilar os casos de testes unitários. -->
    <plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.3</version>
				<configuration>
					<verbose>true</verbose>
					<fork>true</fork>
					<executable>${JAVA_1_7_HOME}/bin/javac</executable>
					<compilerVersion>1.7</compilerVersion>
					<encoding>UTF8</encoding>
				</configuration>
		</plugin>

		<!-- precisei configurar este plugin, para passar o argline e assim criar o resultado 
			 da cobertura feita pelo Jacoco 
			 PESQUISAR -> JACOCO em um conteiner, sevidor tom cat
			 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.15</version>
			<configuration>
				<!-- Sets the VM argument line used when unit tests are run. -->
				<argLine>${surefireArgLine}</argLine>
			</configuration>
		</plugin>

		<!-- Está ligado à geração do relatório de cobertura, mas não está funcionando -->
		<!-- o relatório só é gerado quando não ocorrem erros. ainda precisa ser melhor entendido -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-failsafe-plugin</artifactId>
			<version>2.15</version>
			<executions>
				<!--
					Ensures that both integration-test and verify goals of the Failsafe Maven
					plugin are executed.
				-->
				<execution>
					<id>integration-tests</id>
					<goals>
						<goal>integration-test</goal>
						<goal>verify</goal>
					</goals>
					<configuration>
						<!-- Sets the VM argument line used when integration tests are run. -->
						<argLine>${failsafeArgLine}</argLine>
						<!--
							Skips integration tests if the value of skip.integration.tests property
							is true
						-->
						<skipTests>${skip.integration.tests}</skipTests>
					</configuration>
				</execution>
			</executions>
		</plugin>	
		<plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.2</version>
			<configuration>
				<url>http://107.178.218.180:8080/manager/text</url>
				<server>TomcatServer</server>
				<path>/scones</path>
			</configuration>
		</plugin>	
		<!-- configuração do plugin jacoco. 
		     ainda não está funcionando a geração do relatório de cobertura
			 deveria avaliar a geração de dois relatórios de cobertura
			 1 - testes unitários
			 2 - testes integrados -->
		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.7.5.201505241946</version>
			<!-- <configuration>
				<destfile>${basedir}/target/coverage-reports/jacoco-unit.exec</destfile>
				<datafile>${basedir}/target/coverage-reports/jacoco-unit.exec</datafile>
			</configuration>		-->
			<executions>
				<!--
					Prepares the property pointing to the JaCoCo runtime agent which
					is passed as VM argument when Maven the Surefire plugin is executed.
				-->
				<execution>
					<id>pre-unit-test</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
					<configuration>
						<!-- Sets the path to the file which contains the execution data. -->
						<destFile>${basedir}/target/coverage-reports/jacoco-ut.exec</destFile>
						<!--
							Sets the name of the property containing the settings
							for JaCoCo runtime agent.
						-->
						<propertyName>surefireArgLine</propertyName>
					</configuration>
				</execution>
				<execution>
					<id>post-unit-test</id>
					<phase>test</phase>
					<goals>
						<goal>report</goal>
					</goals>
					<configuration>
						<!-- Sets the path to the file which contains the execution data. -->
						<dataFile>${basedir}/target/coverage-reports/jacoco-ut.exec</dataFile>
						<!-- Sets the output directory for the code coverage report. -->
						<outputDirectory>${basedir}/target/coverage-result/jacoco-ut.xml</outputDirectory>
					</configuration>
				</execution>			
			</executions>
		</plugin>
    </plugins>
  </build>  
</project>